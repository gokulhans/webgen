<div id="alert-2" class="fixed top-20 flex px-24 p-4 bg-green-100 rounded-lg dark:bg-red-200 h-12" role="alert">
    <span class="sr-only">Info</span>
    <div class="ml-3 text-sm font-medium text-green-700 dark:text-red-800">
        Copied to clipboard
    </div>
</div>

<style>
    #alert-2 {
        display: none;
        z-index: 999;
        margin-left: 35%;
    }
</style>

<script>
    function show() {
        document.getElementById('alert-2').style.display = 'block';
        setTimeout(() => {
            document.getElementById('alert-2').style.display = 'none';
        }, 5000);
    }

    function CopyToClipboard(id) {
        console.log('d')
        var r = document.createRange();
        r.selectNode(document.getElementById(id));
        window.getSelection().removeAllRanges();
        window.getSelection().addRange(r);
        document.execCommand('copy');
        window.getSelection().removeAllRanges();
        show()
    }
</script>


<center class="mx-5">

    <form class="flex flex-col max-w-md shadow-lg bg-grey-300 p-5 rounded-xl" action="/addcrud" method="post">
        <center class="m-5 font-bold text-lg"> Functions Generater </center>
        <div class="flex flex-col ">
            <input class="p-2 my-1 border" type="text" name="app" value="Test App" placeholder="app name...">
        </div>
        <div class="flex flex-col ">
            <input class="p-2 my-1 border" type="text" name="name" value="user" placeholder="Route name...">
        </div>
        <div><button class="my-2 p-2 font-bold text-md border bg-green text-green-600 " type="submit">Submit</button>
        </div>
    </form>

</center>

<center class="my-8">
    <div class="flex flex-wrap">
        <div class="md:w-1/2 px-12 text-lg flex flex-col">
            <div class="flex flex-col ">
                <code onClick=CopyToClipboard('npmall')
                    class="cursor-grab font-bold text-green-600 bg-grey-500 p-3 rounded-md shadow-md my-2">{{app}} </code>

                <div id="npmall" class="flex flex-col">

                    <code onClick=CopyToClipboard('npm1') id="npm1"
                        class="cursor-grab bg-grey-500 p-3 rounded-md shadow-md my-2">npx express-generator --view=hbs {{app}}</code>
                    <code onClick=CopyToClipboard('npm2') id="npm2"
                        class="cursor-grab bg-grey-500 p-3 rounded-md shadow-md my-2">cd {{app}}</code>
                    <code onClick=CopyToClipboard('npm3') id="npm3"
                        class="cursor-grab bg-grey-500 p-3 rounded-md shadow-md my-2">npm i</code>
                    <code onClick=CopyToClipboard('npm5') id="npm5"
                        class="cursor-grab bg-grey-500 p-3 rounded-md shadow-md my-2">npm i mongodb express-session express-handlebars nodemon dotenv</code>
                    <code onClick=CopyToClipboard('npm4') id="npm4"
                        class="cursor-grab bg-grey-500 p-3 rounded-md shadow-md my-2">npm start</code>
                    <code onClick=CopyToClipboard('npm4') id="npm4"
                        class="cursor-grab bg-grey-500 p-3 rounded-md shadow-md my-2">npm update --save</code>

                </div>

                <pre>
                <code  class="shadow-sm bg-grey-100 text-xs rounded-xl ">
                     <div class="flex items-center justify-between px-12">
                        <center class="font-bold text-xl">connection.js</center>
                            <button class=" text-lg text-green-500 font-bold" onClick=CopyToClipboard('mongodb') >copy</button>
                          
                    </div>
                    <div style="text-align: start; padding-left:20px;" id="mongodb">

const mongoClient = require('mongodb').MongoClient
const state = {
    db:null
}
module.exports.connect = function(done){
    const url= process.env.DATABASE_URL || "mongodb+srv://gokulhansv:GOk%409846@cluster0.gzlmt.mongodb.net/myFirstDatabase?retryWrites=true&w=majority"
    const dbname='codesnippets'

    mongoClient.connect(url,(err,data)=>{
        if(err) return done(err)
        state.db=data.db(dbname)
        done() 
    })
}
  

module.exports.get=function(){
    return state.db
}
                    </div>
                </code>
                </pre>

                <pre>
                <code  class="shadow-sm bg-grey-100 text-xs rounded-xl ">
                     <div class="flex items-center justify-between px-12">
                        <center class="font-bold text-xl">Codes to add in app.js</center>
                            <button class=" text-lg text-green-500 font-bold" onClick=CopyToClipboard('app.js') >copy</button>
                          
                    </div>
                    <div style="text-align: start; padding-left:20px;"  id="app.js">

if (process.env.NODE_ENV !== 'production') {
  require('dotenv').config()
}

const sessions = require('express-session');
var db = require('./connection');
const hbs = require('express-handlebars');
{{#each data}}
var {{this.name}}Router = require('./routes/{{this.name}}-routes');
{{/each}}

// view engine setup
app.engine('hbs', hbs.engine({ extname: 'hbs', defaultLayout: 'layout', layoutsDir: __dirname + '/views/', partialsDir: __dirname + '/views/partials/' }))

// creating 24 hours from milliseconds
const oneDay = 1000 * 60 * 60 * 24;

//session middleware
app.use(sessions({
  secret: "thisismysecrctekeyfhrgfgrfrty84fwir767",
  saveUninitialized: true,
  cookie: { maxAge: oneDay },
  resave: false
}));

db.connect((err) => {
  if (err) console.log("Connection Error" + err);
  else console.log("Database connected to port")
})

{{#each data}}
app.use('/{{this.name}}s', {{this.name}}Router);
{{/each}}

                    </div>
                </code>
                </pre>
            </div>
        </div>
        <div class="md:w-1/2 px-12 text-lg flex flex-col">
            <div class="flex flex-col ">

                <cente class="my-2"> Files To Make </cente>

                <code class="font-bold text-green-600 bg-grey-500 p-3 rounded-md shadow-md my-2">routes</code>
                <div class="flex flex-col items-start p-5">
                    {{#each data}}
                    <p>{{this.name}}-routes.js</p>
                    {{/each}}
                </div>


                <code class="font-bold text-green-600 bg-grey-500 p-3 rounded-md shadow-md my-2">controllers</code>
                <div class="flex flex-col items-start p-5">
                    {{#each data}}
                    <p>{{this.name}}s-controller.js</p>

                    {{/each}}
                </div>


                <code class="font-bold text-green-600 bg-grey-500 p-3 rounded-md shadow-md my-2">views/pages</code>
                <div class="flex flex-col items-start p-5">
                    {{#each data}}
                    <div class="my-2">
                        <p>all{{this.name}}s.hbs</p>
                        <p>{{this.name}}.hbs</p>
                    </div>
                    {{/each}}
                </div>


                <code class="font-bold text-green-600 bg-grey-500 p-3 rounded-md shadow-md my-2">views/forms</code>
                <div class="flex flex-col items-start p-5">
                    {{#each data}}
                    <div class="my-2">
                        <p>add{{this.name}}.hbs</p>
                        <p>edit{{this.name}}.hbs</p>
                    </div>
                    {{/each}}
                </div>

            </div>
        </div>
    </div>
</center>



<div class=" my-12 px-4">
    <div class="flex flex-wrap ">
        {{#each data}}
        <div class="min-w-min md:w-1/2 lg:my-4 lg:px-4">
            <div class="">
                <pre><code class="shadow-sm bg-grey-100 text-xs rounded-xl">
    <div class="flex items-center justify-between px-12">
                        <center class="font-bold text-xl">{{this.name}}-routes.js</center>
                        {{!-- <center class=" text-lg text-green-500 font-bold"> --}}
                            <button class=" text-lg text-green-500 font-bold" onClick=CopyToClipboard('{{this.name}}routes') >copy</button>
                          
                    </div>
<div id="{{this.name}}routes">
        const express = require("express");
        const router = express.Router();
        const {{this.name}}sController = require("../controllers/{{this.name}}s-controller");

        router.get("/", {{this.name}}sController.getAll{{this.capname}}s);
        router.get('/add', {{this.name}}sController.get{{this.capname}}Addform);
        router.post("/add", {{this.name}}sController.add{{this.capname}});
        router.get('/edit/:id', {{this.name}}sController.get{{this.capname}}Editform);
        router.put("/edit", {{this.name}}sController.edit{{this.capname}});
        router.get('/:id', {{this.name}}sController.get{{this.capname}}ById);
        router.delete("/:id", {{this.name}}sController.delete{{this.capname}});

        module.exports = router;
</div>
                </code></pre>
            </div>

        </div>
        {{/each}}
        <!-- END Column -->

    </div>

</div>



<div class=" my-12 px-4">
    <div class="flex flex-wrap ">
        {{#each data}}
        <div class="min-w-min md:w-1/2 lg:my-4 lg:px-4 lg:w-1/3">
            <div class="">
                <pre><code class="shadow-sm bg-grey-100 text-xs rounded-xl">
                    <div class="flex items-center justify-between px-12">
                        <center class="font-bold text-xl">{{this.name}}s-controller.js</center>
                        {{!-- <center class=" text-lg text-green-500 font-bold"> --}}
                            <button class=" text-lg text-green-500 font-bold" onClick=CopyToClipboard('{{this.name}}') >copy</button>
                          
                    </div>
<div id="{{this.name}}">

        const { ObjectId } = require('mongodb');
        const db = require('../connection');


        const getAll{{this.capname}}s = async function (req, res) {
        let data = await db.get().collection('data').find().toArray()
        res.render('all{{this.name}}s',{data});
        }

        const get{{this.capname}}Addform = async function (req, res) {
        res.render('forms/add{{this.name}}');
        }

        const add{{this.capname}} = async function (req, res) {
        let data = req.body
        await db.get().collection('data').insertOne(data)
        res.render('pages/{{this.name}}', { data })
        }

        const get{{this.capname}}Editform = async function (req, res) {
        let id = req.params.id
        let data = await db.get().collection('data').findOne({ _id: ObjectId(id) })
        res.render('forms/edit{{this.name}}', { data });
        }

        const edit{{this.capname}} = async function (req, res) {
        let newdata = req.body
        let query = { _id: ObjectId(req.body.id) }
        var newvalues = { $set: { name: newdata.name, desc: newdata.desc} };
        await db.get().collection('data').updateOne(query, newvalues)
        res.redirect(`/{{this.name}}/${req.body.id}`)
        }

        const delete{{this.capname}} = async function (req, res) {
        let id = req.params.id
        await db.get().collection('data').deleteOne({ _id: ObjectId(id) })
        res.redirect('back')
        }

        const get{{this.capname}}ById = async function (req, res) {
        let id = req.params.id
        let data = await db.get().collection('data').findOne({ _id: ObjectId(id) })
        res.render('pages/{{this.name}}', { data });
        }

        exports.getAll{{this.capname}}s = getAll{{this.capname}}s;
        exports.get{{this.capname}}Addform = get{{this.capname}}Addform;
        exports.add{{this.capname}} = add{{this.capname}};
        exports.get{{this.capname}}Editform = get{{this.capname}}Editform;
        exports.edit{{this.capname}} = edit{{this.capname}};
        exports.delete{{this.capname}} = delete{{this.capname}};
        exports.get{{this.capname}}ById = get{{this.capname}}ById;

</div>


                </code></pre>
            </div>

        </div>


        {{/each}}
        <!-- END Column -->

    </div>
</div>